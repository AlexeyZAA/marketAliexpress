<?php
// Настройки по умолчанию
$default_settings = array(
	'user_api_key' => '0386336437dba8b58ab3da7bb693d29f',
	'user_deep_link_hash' => '',
	'items_per_page' => 15,
	'rss_items_count' => 15,
	'price_min' => 0.0,
	'price_max' => 1000000.0,
	'site_name' => 'Universe of goods',
	'lang' => 'ru',
	'currency' => 'RUR',
	'cache_library' => 'none',
	'memcached_host' => '127.0.0.1',
	'memcached_port' => 11211,
	'memcached_pconnect' => TRUE,
	'mysql_host' => '127.0.0.1',
	'mysql_user' => 'root',
	'mysql_pass' => '',
	'mysql_base' => 'test',
	'mysql_persist' => FALSE,
);

// Объединяем считанные настройки со значениями по умолчанию
foreach ($default_settings as $key => $value) {
	if (!isset(Yii::$app->params[$key])) Yii::$app->params[$key] = $value;
}

// Базовые функции
include_once dirname(__FILE__) . '/libs/clCommon.php';

$Common = new clCommon();

// Проверяем наличие всего необходимого
$Common->CheckCMSRequirements();

//------------------------------------------------------------------------------
// Цепляем библиотеку для работы с API
include_once dirname(__FILE__) . '/libs/clEPNAPIAccess.php';

// Класс для работы с API
$APIAccess = new clEPNAPIAccess(
                trim(Yii::$app->params['user_api_key']),
                trim(Yii::$app->params['user_deep_link_hash'])
        );
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Цепляем библиотеку для работы с путями
include_once dirname(__FILE__) . '/libs/clPath.php';

// Создаём объект для работы с путями
$Path = new clPath(
		Yii::$app->params['user_deep_link_hash']
	);
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Библиотека для работы с языками
include_once dirname(__FILE__) . '/libs/clLang.php';

// Создаём объект для работы с языками
$Lang = new clLang(
		Yii::$app->params['lang']
	);
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Разбор случаев для кэша
$Cache = FALSE;
switch (Yii::$app->params['cache_library']) {
	// Будем кэшировать в XCache
	case 'xcache';
		include_once dirname(__FILE__) . '/libs/clCacheXCache.php';
		$Cache = new clCacheXCache();
	break;
	
	// Будем кэшировать в APC user cache
	case 'apc';
		include_once dirname(__FILE__) . '/libs/clCacheAPC.php';
		$Cache = new clCacheAPC();
	break;
	
	// Будем кэшировать в WinCache. Важно! Экспериментальная поддержка! Требуется тестирование!
	case 'wincache';
		include_once dirname(__FILE__) . '/libs/clCacheWinCache.php';
		$Cache = new clCacheWinCache();
	break;
	// Будем кэшировать в memcached, используя библиотеку Memcache
	case 'memcache';
		include_once dirname(__FILE__) . '/libs/clCacheMemcache.php';
		$Cache = new clCacheMemcache(
				Yii::$app->params['memcached_host'],
				Yii::$app->params['memcached_port'],
				Yii::$app->params['memcached_pconnect']
			);
	break;
	
	// Будем кэшировать в memcached, используя библиотеку Memcached
	case 'memcached';
		include_once dirname(__FILE__) . '/libs/clCacheMemcached.php';
		$Cache = new clCacheMemcached(
				Yii::$app->params['memcached_host'],
				Yii::$app->params['memcached_port'],
				Yii::$app->params['memcached_pconnect']
			);
	break;
	
	// Будем кэшировать в MySQL
	case 'mysql';
		include_once dirname(__FILE__) . '/libs/clCacheMySQL.php';
		$Cache = new clCacheMySQL(
				Yii::$app->params['mysql_host'],
				Yii::$app->params['mysql_user'],
				Yii::$app->params['mysql_pass'],
				Yii::$app->params['mysql_base'],
				Yii::$app->params['mysql_persist']
			);
	break;
	
	// Вариант по умолчанию. Фейковый кэш (отсутствие кэширования)
	default;
		include_once dirname(__FILE__) . '/libs/clCacheFake.php';
		$Cache = new clCacheFake();
	break;
}
//------------------------------------------------------------------------------